{"version":3,"sources":["/home/arvind/coding/entr/hybrid/gotnext/src/providers/firebase/firebase.ts","/home/arvind/coding/entr/hybrid/gotnext/src/providers/firebase/firebase.ts.pre-build-optimizer.js"],"names":[],"mappings":"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","file":"/home/arvind/coding/entr/hybrid/gotnext/src/providers/firebase/firebase.ts.post-build-optimizer.js","sourceRoot":"","sourcesContent":["// import { Storage } from '@ionic/storage';\nimport { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFireStorage, AngularFireStorageReference, AngularFireUploadTask } from 'angularfire2/storage';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from \"firebase/app\";\nimport { Match } from \"../../interfaces/match\";\n// import { AboutSettings } from '../../interfaces/match';\nimport { Events } from \"ionic-angular\";\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\nimport 'rxjs/add/operator/take';\nimport { first } from 'rxjs/operators';\nimport \"@firebase/messaging\";\n\n@Injectable()\nexport class FirebaseDatabase {\n  storage: AngularFireStorageReference;\n  constructor(public afd: AngularFireDatabase, public afs: AngularFireStorage ) {\n    this.storage = afs.ref(\"users\")\n   }\n\n  getMatches() {\n    return this.afd.list('/matches/', ref=>ref.orderByChild(\"start_time\")).valueChanges();\n  }\n  getStates() {\n    return [\"joined\", \"hosted\", \"full\", \"available\"];\n  }\n  createMatch(match : Match) {\n    const promise = this.afd.list('/matches/').push(match);\n    match.id = promise.key;\n    this.afd.list('/matches/').update(promise.key, match);\n  }\n\n  deleteMatch(match) {\n    this.afd.list('/matches/').remove(match.id);\n  }\n\n  updateMatch(match) {\n    this.afd.list('/matches/').update(match.id, match);\n  }\n\n\n  uploadProfileImage(user_id: string, file: any) {\n    console.log(user_id); // just to suppress the non-usage error\n    let task : AngularFireUploadTask = this.storage.child('${user_id}/profile_picture').put(file);\n    return task; \n    // Use uploadProfileImage(x,y).downloadURL() to get file URL\n  }\n}\n\n\n@Injectable()\nexport class FirebaseAuth {\n  authState : any = null\n  constructor(private events: Events, public afAuth: AngularFireAuth, public db: FirebaseDatabase) {\n    afAuth.authState.subscribe( (auth)=> { \n      this.authState = auth\n    });\n  }\n\n  login(email: string, password: string) {\n    this.afAuth.auth.signInWithEmailAndPassword(email, password);\n    this.events.publish('user:login', this.currentUser, Date.now());    \n  }\n\n  signup(email: string, password: string) {\n    this.afAuth.auth.createUserWithEmailAndPassword(email, password);\n    // this.afAuth.auth.\n    this.events.publish('user:signup', this.currentUser, Date.now());\n  }\n\n  get authenticated() : boolean {\n    return this.authState !== null;\n  }\n  get currentUser() : any {\n    return this.authenticated ? this.authState : null;\n  }\n  get currentUserObservable() : any {\n    return this.afAuth.authState;\n  }\n  get currentUserId() : string {\n    return this.authenticated ? this.authState.uid : '';\n  }\n  get currentUserDisplayName() : string {\n    if (!this.authState) {return 'Guest'; }\n    else { return this.authState['displayName'] || 'User has not set name'; }\n  }\n\n  googleLogin() {\n    const provider = new firebase.auth.GoogleAuthProvider()\n    return this.socialSignIn(provider);\n  }\n\n  private socialSignIn(provider) {\n    return this.afAuth.auth.signInWithPopup(provider)\n      .then((credential) =>  {\n          this.authState = credential.user\n          this.updateUserData()\n      })\n      .catch(error => console.log(error));\n  }\n  \n\n  private updateUserData(): void {\n    // Writes user name and email to realtime db\n    // useful if your app displays information about users or for admin features\n      let path = \"users/${this.currentUserId}\"; // Endpoint on firebase\n      let data = {\n                    email: this.authState.email,\n                    name: this.authState.displayName\n                  }\n  \n      this.db.afd.object(path).update(data)\n      .catch(error => console.log(error));\n  \n  }\n  isLoggedIn() {\n    return this.afAuth.authState.pipe(first()).toPromise();\n  }\n  \n  logout() {\n    this.afAuth.auth.signOut();\n    this.events.publish('user:logout', this.currentUser, Date.now());    \n  }\n\n  loginGoogle() {\n    this.afAuth.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n  }\n\n  updatePassword (newPass: string) {\n    this.afAuth.auth.currentUser.updatePassword(newPass)\n  }\n\n  updateProfile( newUserName: string, photoUrl: string = \"\") {\n    if (newUserName == \"\") {\n      newUserName = this.currentUserDisplayName;\n    }\n    if (photoUrl == \"\") {\n      photoUrl = this.afAuth.auth.currentUser.photoURL;\n    }\n    this.afAuth.auth.currentUser.updateProfile({\n      displayName: newUserName,\n      photoURL: photoUrl\n    });\n  }\n}\n\n\n@Injectable() \nexport class FirebaseMessaging {\n  m : firebase.messaging.Messaging;\n  currentMessage = new BehaviorSubject(null);\n  \n  constructor(private db: AngularFireDatabase, private auth: AngularFireAuth) {\n    this.m = firebase.messaging();\n\n    // navigator.serviceWorker.register('firebase-messaging-sw.js')\n    //   .then((registration) => {\n    //     this.m.useServiceWorker(registration);\n    //   })\n    // console.log(\"Token: \", this.m.getToken());\n  }\n\n  updateToken(token) {\n    this.auth.authState.take(1).subscribe(user => \n    {\n      if (!user) return;\n      const data = { \"notifTokens\": token};\n      this.db.object('users/' + user.uid).update(data);\n    })\n  }\n\n  getPermission() {\n    this.m.requestPermission()\n      .then( () => {\n        console.log('Notification permission granted');\n        return this.m.getToken();\n      })\n      .then(token => {\n        console.log(token);\n        this.updateToken(token);\n      })\n      .catch(err => {\n        console.log(\"Unable to get permission to notify\", err);\n      })\n  }\n\n  receiveMessage() {\n    this.m.onMessage((payload) => {\n      console.log(\"Message received: \", payload);\n      this.currentMessage.next(payload);\n    });\n\n    // this.m.setBackgroundMessageHandler((payload) => {\n    //   console.log('[firebase-messaging] Received background message ', payload);\n    //   var notificationTitle = \"Background Message Title\";\n    //   var notificationOptions = {\n    //     body: \"Background Message Body\",\n    //     icon: \"assets/icon.png\"\n    //   };\n    //   return this.showNotification(notificationTitle, notificationOptions);\n    // })\n  }\n}","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n// import { Storage } from '@ionic/storage';\nimport { Injectable } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { AngularFireStorage } from 'angularfire2/storage';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from \"firebase/app\";\n// import { AboutSettings } from '../../interfaces/match';\nimport { Events } from \"ionic-angular\";\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\nimport 'rxjs/add/operator/take';\nimport { first } from 'rxjs/operators';\nimport \"@firebase/messaging\";\nvar FirebaseDatabase = (function () {\n    function FirebaseDatabase(afd, afs) {\n        this.afd = afd;\n        this.afs = afs;\n        this.storage = afs.ref(\"users\");\n    }\n    FirebaseDatabase.prototype.getMatches = function () {\n        return this.afd.list('/matches/', function (ref) { return ref.orderByChild(\"start_time\"); }).valueChanges();\n    };\n    FirebaseDatabase.prototype.getStates = function () {\n        return [\"joined\", \"hosted\", \"full\", \"available\"];\n    };\n    FirebaseDatabase.prototype.createMatch = function (match) {\n        var promise = this.afd.list('/matches/').push(match);\n        match.id = promise.key;\n        this.afd.list('/matches/').update(promise.key, match);\n    };\n    FirebaseDatabase.prototype.deleteMatch = function (match) {\n        this.afd.list('/matches/').remove(match.id);\n    };\n    FirebaseDatabase.prototype.updateMatch = function (match) {\n        this.afd.list('/matches/').update(match.id, match);\n    };\n    FirebaseDatabase.prototype.uploadProfileImage = function (user_id, file) {\n        console.log(user_id); // just to suppress the non-usage error\n        var task = this.storage.child('${user_id}/profile_picture').put(file);\n        return task;\n        // Use uploadProfileImage(x,y).downloadURL() to get file URL\n    };\n    FirebaseDatabase = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [AngularFireDatabase, AngularFireStorage])\n    ], FirebaseDatabase);\n    return FirebaseDatabase;\n}());\nexport { FirebaseDatabase };\nvar FirebaseAuth = (function () {\n    function FirebaseAuth(events, afAuth, db) {\n        var _this = this;\n        this.events = events;\n        this.afAuth = afAuth;\n        this.db = db;\n        this.authState = null;\n        afAuth.authState.subscribe(function (auth) {\n            _this.authState = auth;\n        });\n    }\n    FirebaseAuth.prototype.login = function (email, password) {\n        this.afAuth.auth.signInWithEmailAndPassword(email, password);\n        this.events.publish('user:login', this.currentUser, Date.now());\n    };\n    FirebaseAuth.prototype.signup = function (email, password) {\n        this.afAuth.auth.createUserWithEmailAndPassword(email, password);\n        // this.afAuth.auth.\n        this.events.publish('user:signup', this.currentUser, Date.now());\n    };\n    Object.defineProperty(FirebaseAuth.prototype, \"authenticated\", {\n        get: function () {\n            return this.authState !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAuth.prototype, \"currentUser\", {\n        get: function () {\n            return this.authenticated ? this.authState : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAuth.prototype, \"currentUserObservable\", {\n        get: function () {\n            return this.afAuth.authState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAuth.prototype, \"currentUserId\", {\n        get: function () {\n            return this.authenticated ? this.authState.uid : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseAuth.prototype, \"currentUserDisplayName\", {\n        get: function () {\n            if (!this.authState) {\n                return 'Guest';\n            }\n            else {\n                return this.authState['displayName'] || 'User has not set name';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FirebaseAuth.prototype.googleLogin = function () {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        return this.socialSignIn(provider);\n    };\n    FirebaseAuth.prototype.socialSignIn = function (provider) {\n        var _this = this;\n        return this.afAuth.auth.signInWithPopup(provider)\n            .then(function (credential) {\n            _this.authState = credential.user;\n            _this.updateUserData();\n        })\n            .catch(function (error) { return console.log(error); });\n    };\n    FirebaseAuth.prototype.updateUserData = function () {\n        // Writes user name and email to realtime db\n        // useful if your app displays information about users or for admin features\n        var path = \"users/${this.currentUserId}\"; // Endpoint on firebase\n        var data = {\n            email: this.authState.email,\n            name: this.authState.displayName\n        };\n        this.db.afd.object(path).update(data)\n            .catch(function (error) { return console.log(error); });\n    };\n    FirebaseAuth.prototype.isLoggedIn = function () {\n        return this.afAuth.authState.pipe(first()).toPromise();\n    };\n    FirebaseAuth.prototype.logout = function () {\n        this.afAuth.auth.signOut();\n        this.events.publish('user:logout', this.currentUser, Date.now());\n    };\n    FirebaseAuth.prototype.loginGoogle = function () {\n        this.afAuth.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    };\n    FirebaseAuth.prototype.updatePassword = function (newPass) {\n        this.afAuth.auth.currentUser.updatePassword(newPass);\n    };\n    FirebaseAuth.prototype.updateProfile = function (newUserName, photoUrl) {\n        if (photoUrl === void 0) { photoUrl = \"\"; }\n        if (newUserName == \"\") {\n            newUserName = this.currentUserDisplayName;\n        }\n        if (photoUrl == \"\") {\n            photoUrl = this.afAuth.auth.currentUser.photoURL;\n        }\n        this.afAuth.auth.currentUser.updateProfile({\n            displayName: newUserName,\n            photoURL: photoUrl\n        });\n    };\n    FirebaseAuth = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [Events, AngularFireAuth, FirebaseDatabase])\n    ], FirebaseAuth);\n    return FirebaseAuth;\n}());\nexport { FirebaseAuth };\nvar FirebaseMessaging = (function () {\n    function FirebaseMessaging(db, auth) {\n        this.db = db;\n        this.auth = auth;\n        this.currentMessage = new BehaviorSubject(null);\n        this.m = firebase.messaging();\n        // navigator.serviceWorker.register('firebase-messaging-sw.js')\n        //   .then((registration) => {\n        //     this.m.useServiceWorker(registration);\n        //   })\n        // console.log(\"Token: \", this.m.getToken());\n    }\n    FirebaseMessaging.prototype.updateToken = function (token) {\n        var _this = this;\n        this.auth.authState.take(1).subscribe(function (user) {\n            if (!user)\n                return;\n            var data = { \"notifTokens\": token };\n            _this.db.object('users/' + user.uid).update(data);\n        });\n    };\n    FirebaseMessaging.prototype.getPermission = function () {\n        var _this = this;\n        this.m.requestPermission()\n            .then(function () {\n            console.log('Notification permission granted');\n            return _this.m.getToken();\n        })\n            .then(function (token) {\n            console.log(token);\n            _this.updateToken(token);\n        })\n            .catch(function (err) {\n            console.log(\"Unable to get permission to notify\", err);\n        });\n    };\n    FirebaseMessaging.prototype.receiveMessage = function () {\n        var _this = this;\n        this.m.onMessage(function (payload) {\n            console.log(\"Message received: \", payload);\n            _this.currentMessage.next(payload);\n        });\n        // this.m.setBackgroundMessageHandler((payload) => {\n        //   console.log('[firebase-messaging] Received background message ', payload);\n        //   var notificationTitle = \"Background Message Title\";\n        //   var notificationOptions = {\n        //     body: \"Background Message Body\",\n        //     icon: \"assets/icon.png\"\n        //   };\n        //   return this.showNotification(notificationTitle, notificationOptions);\n        // })\n    };\n    FirebaseMessaging = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [AngularFireDatabase, AngularFireAuth])\n    ], FirebaseMessaging);\n    return FirebaseMessaging;\n}());\nexport { FirebaseMessaging };\n//# sourceMappingURL=firebase.js.map"]}