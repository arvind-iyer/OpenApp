{"version":3,"sources":["/home/arvind/coding/entr/hybrid/gotnext/src/app/app.component.ts","/home/arvind/coding/entr/hybrid/gotnext/src/app/app.component.ts.pre-build-optimizer.js"],"names":[],"mappings":"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","file":"/home/arvind/coding/entr/hybrid/gotnext/src/app/app.component.ts.post-build-optimizer.js","sourceRoot":"","sourcesContent":["import { Component, ViewChild } from '@angular/core';\n\nimport { Events, MenuController, Nav, Platform } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { Storage } from '@ionic/storage';\n\nimport { AboutPage } from '../pages/about/about';\nimport { AccountPage } from '../pages/account/account';\nimport { LoginPage } from '../pages/login/login';\nimport { MapPage } from '../pages/map/map';\nimport { SignupPage } from '../pages/signup/signup';\nimport { TabsPage } from '../pages/tabs-page/tabs-page';\nimport { TutorialPage } from '../pages/tutorial/tutorial';\nimport { MatchListPage } from '../pages/match-list/match-list';\nimport { SupportPage } from '../pages/support/support';\n\nimport { FirebaseAuth } from '../providers/firebase/firebase';\n\nexport interface PageInterface {\n  title: string;\n  name: string;\n  component: any;\n  icon: string;\n  logsOut?: boolean;\n  index?: number;\n  tabName?: string;\n  tabComponent?: any;\n}\n\n@Component({\n  templateUrl: 'app.template.html'\n})\nexport class GotNextApp {\n  // the root nav is a child of the root app component\n  // @ViewChild(Nav) gets a reference to the app's root nav\n  @ViewChild(Nav) nav: Nav;\n\n  // List of pages that can be navigated to from the left menu\n  // the left menu only works after login\n  // the login page disables the left menu\n  appPages: PageInterface[] = [\n    { title: 'Matches', name: 'TabsPage', component: TabsPage, tabComponent: MatchListPage, index: 0, icon: 'basketball' },\n    { title: 'Map', name: 'TabsPage', component: TabsPage, tabComponent: MapPage, index: 1, icon: 'map' },\n    { title: 'About', name: 'TabsPage', component: TabsPage, tabComponent: AboutPage, index: 2, icon: 'information-circle' }\n  ];\n  loggedInPages: PageInterface[] = [\n    { title: 'Account', name: 'AccountPage', component: AccountPage, icon: 'person' },\n    { title: 'Support', name: 'SupportPage', component: SupportPage, icon: 'help' },\n    { title: 'Logout', name: 'TabsPage', component: TabsPage, icon: 'log-out', logsOut: true }\n  ];\n  loggedOutPages: PageInterface[] = [\n    { title: 'Login', name: 'LoginPage', component: LoginPage, icon: 'log-in' },\n    { title: 'Support', name: 'SupportPage', component: SupportPage, icon: 'help' },\n    { title: 'Signup', name: 'SignupPage', component: SignupPage, icon: 'person-add' }\n  ];\n  rootPage: any = LoginPage;\n\n  constructor(\n    public events: Events,\n    public fbAuth: FirebaseAuth,\n    public menu: MenuController,\n    public platform: Platform,\n    public storage: Storage,\n    public splashScreen: SplashScreen\n  ) {\n\n    // // Check if the user has already seen the tutorial\n    // this.storage.get('hasSeenTutorial')\n    //   .then((hasSeenTutorial) => {\n    //     if (hasSeenTutorial) {\n    //       this.rootPage = LoginPage;\n    //     } else {\n    //       this.rootPage = TutorialPage;\n    //     }\n    //     this.platformReady()\n    //   });\n    if(fbAuth.authenticated) {\n      this.rootPage = TabsPage;\n    }\n    // load the conference data\n\n    // decide which menu items should be hidden by current login status stored in local storage\n    this.enableMenu(this.fbAuth.authenticated);\n    this.listenToLoginEvents();\n  }\n\n  openPage(page: PageInterface) {\n    let params = {};\n\n    // the nav component was found using @ViewChild(Nav)\n    // setRoot on the nav to remove previous pages and only have this page\n    // we wouldn't want the back button to show in this scenario\n    if (page.index) {\n      params = { tabIndex: page.index };\n    }\n\n    // If we are already on tabs just change the selected tab\n    // don't setRoot again, this maintains the history stack of the\n    // tabs even if changing them from the menu\n    if (this.nav.getActiveChildNavs().length && page.index != undefined) {\n      this.nav.getActiveChildNavs()[0].select(page.index);\n    } else {\n      // Set the root of the nav with params if it's a tab index\n      this.nav.setRoot(page.name, params).catch((err: any) => {\n        console.log(`Didn't set nav root: ${err}`);\n      });\n    }\n\n    if (page.logsOut === true) {\n      // Give the menu time to close before changing to logged out\n      this.fbAuth.logout();\n    }\n  }\n\n  openTutorial() {\n    this.nav.setRoot(TutorialPage);\n  }\n\n  listenToLoginEvents() {\n    this.events.subscribe('user:login', () => {\n      this.enableMenu(true);\n      this.nav.setRoot('LoginPage');    \n    });\n\n    this.events.subscribe('user:signup', () => {\n      this.enableMenu(true);\n    });\n\n    this.events.subscribe('user:logout', () => {\n      console.log(\"User has logged out\");\n      this.enableMenu(false);\n    });\n  }\n\n  enableMenu(loggedIn: boolean) {\n    this.menu.enable(loggedIn, 'loggedInMenu');\n    this.menu.enable(!loggedIn, 'loggedOutMenu');\n  }\n\n  platformReady() {\n    // Call any initial plugins when ready\n    this.platform.ready().then(() => {\n      this.splashScreen.hide();\n    });\n  }\n\n  isActive(page: PageInterface) {\n    let childNav = this.nav.getActiveChildNavs()[0];\n\n    // Tabs are a special case because they have their own navigation\n    if (childNav) {\n      if (childNav.getSelected() && childNav.getSelected().root === page.tabComponent) {\n        return 'primary';\n      }\n      return;\n    }\n\n    if (this.nav.getActive() && this.nav.getActive().name === page.name) {\n      return 'primary';\n    }\n    return;\n  }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, ViewChild } from '@angular/core';\nimport { Events, MenuController, Nav, Platform } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { Storage } from '@ionic/storage';\nimport { AboutPage } from '../pages/about/about';\nimport { AccountPage } from '../pages/account/account';\nimport { LoginPage } from '../pages/login/login';\nimport { MapPage } from '../pages/map/map';\nimport { SignupPage } from '../pages/signup/signup';\nimport { TabsPage } from '../pages/tabs-page/tabs-page';\nimport { TutorialPage } from '../pages/tutorial/tutorial';\nimport { MatchListPage } from '../pages/match-list/match-list';\nimport { SupportPage } from '../pages/support/support';\nimport { FirebaseAuth } from '../providers/firebase/firebase';\nvar GotNextApp = (function () {\n    function GotNextApp(events, fbAuth, menu, platform, storage, splashScreen) {\n        this.events = events;\n        this.fbAuth = fbAuth;\n        this.menu = menu;\n        this.platform = platform;\n        this.storage = storage;\n        this.splashScreen = splashScreen;\n        // List of pages that can be navigated to from the left menu\n        // the left menu only works after login\n        // the login page disables the left menu\n        this.appPages = [\n            { title: 'Matches', name: 'TabsPage', component: TabsPage, tabComponent: MatchListPage, index: 0, icon: 'basketball' },\n            { title: 'Map', name: 'TabsPage', component: TabsPage, tabComponent: MapPage, index: 1, icon: 'map' },\n            { title: 'About', name: 'TabsPage', component: TabsPage, tabComponent: AboutPage, index: 2, icon: 'information-circle' }\n        ];\n        this.loggedInPages = [\n            { title: 'Account', name: 'AccountPage', component: AccountPage, icon: 'person' },\n            { title: 'Support', name: 'SupportPage', component: SupportPage, icon: 'help' },\n            { title: 'Logout', name: 'TabsPage', component: TabsPage, icon: 'log-out', logsOut: true }\n        ];\n        this.loggedOutPages = [\n            { title: 'Login', name: 'LoginPage', component: LoginPage, icon: 'log-in' },\n            { title: 'Support', name: 'SupportPage', component: SupportPage, icon: 'help' },\n            { title: 'Signup', name: 'SignupPage', component: SignupPage, icon: 'person-add' }\n        ];\n        this.rootPage = LoginPage;\n        // // Check if the user has already seen the tutorial\n        // this.storage.get('hasSeenTutorial')\n        //   .then((hasSeenTutorial) => {\n        //     if (hasSeenTutorial) {\n        //       this.rootPage = LoginPage;\n        //     } else {\n        //       this.rootPage = TutorialPage;\n        //     }\n        //     this.platformReady()\n        //   });\n        if (fbAuth.authenticated) {\n            this.rootPage = TabsPage;\n        }\n        // load the conference data\n        // decide which menu items should be hidden by current login status stored in local storage\n        this.enableMenu(this.fbAuth.authenticated);\n        this.listenToLoginEvents();\n    }\n    GotNextApp.prototype.openPage = function (page) {\n        var params = {};\n        // the nav component was found using @ViewChild(Nav)\n        // setRoot on the nav to remove previous pages and only have this page\n        // we wouldn't want the back button to show in this scenario\n        if (page.index) {\n            params = { tabIndex: page.index };\n        }\n        // If we are already on tabs just change the selected tab\n        // don't setRoot again, this maintains the history stack of the\n        // tabs even if changing them from the menu\n        if (this.nav.getActiveChildNavs().length && page.index != undefined) {\n            this.nav.getActiveChildNavs()[0].select(page.index);\n        }\n        else {\n            // Set the root of the nav with params if it's a tab index\n            this.nav.setRoot(page.name, params).catch(function (err) {\n                console.log(\"Didn't set nav root: \" + err);\n            });\n        }\n        if (page.logsOut === true) {\n            // Give the menu time to close before changing to logged out\n            this.fbAuth.logout();\n        }\n    };\n    GotNextApp.prototype.openTutorial = function () {\n        this.nav.setRoot(TutorialPage);\n    };\n    GotNextApp.prototype.listenToLoginEvents = function () {\n        var _this = this;\n        this.events.subscribe('user:login', function () {\n            _this.enableMenu(true);\n            _this.nav.setRoot('LoginPage');\n        });\n        this.events.subscribe('user:signup', function () {\n            _this.enableMenu(true);\n        });\n        this.events.subscribe('user:logout', function () {\n            console.log(\"User has logged out\");\n            _this.enableMenu(false);\n        });\n    };\n    GotNextApp.prototype.enableMenu = function (loggedIn) {\n        this.menu.enable(loggedIn, 'loggedInMenu');\n        this.menu.enable(!loggedIn, 'loggedOutMenu');\n    };\n    GotNextApp.prototype.platformReady = function () {\n        var _this = this;\n        // Call any initial plugins when ready\n        this.platform.ready().then(function () {\n            _this.splashScreen.hide();\n        });\n    };\n    GotNextApp.prototype.isActive = function (page) {\n        var childNav = this.nav.getActiveChildNavs()[0];\n        // Tabs are a special case because they have their own navigation\n        if (childNav) {\n            if (childNav.getSelected() && childNav.getSelected().root === page.tabComponent) {\n                return 'primary';\n            }\n            return;\n        }\n        if (this.nav.getActive() && this.nav.getActive().name === page.name) {\n            return 'primary';\n        }\n        return;\n    };\n    __decorate([\n        ViewChild(Nav),\n        __metadata(\"design:type\", Nav)\n    ], GotNextApp.prototype, \"nav\", void 0);\n    GotNextApp = __decorate([\n        Component({\n            templateUrl: 'app.template.html'\n        }),\n        __metadata(\"design:paramtypes\", [Events,\n            FirebaseAuth,\n            MenuController,\n            Platform,\n            Storage,\n            SplashScreen])\n    ], GotNextApp);\n    return GotNextApp;\n}());\nexport { GotNextApp };\n//# sourceMappingURL=app.component.js.map"]}