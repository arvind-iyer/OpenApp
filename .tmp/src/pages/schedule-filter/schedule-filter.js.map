{"version":3,"sources":["/home/arvind/coding/entr/hybrid/gotnext/src/pages/schedule-filter/schedule-filter.ts","/home/arvind/coding/entr/hybrid/gotnext/src/pages/schedule-filter/schedule-filter.ts.pre-build-optimizer.js"],"names":[],"mappings":";;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAE1C,OAAO,EAAE,SAAS,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;AAE1D,OAAO,EAAE,gBAAgB,EAAE,MAAM,mCAAmC,CAAC;AAOrE,IAAA,kBAAA,iBAAA,CAAA;IAGE,4BACS,GAAqB,EACrB,SAAoB,EACpB,QAAwB;QAHjC,IAAA,KAAA,GAAA,IAAA,CAgBC;QAfQ,IAAA,CAAA,GAAG,GAAH,GAAG,CAAkB;QACrB,IAAA,CAAA,SAAS,GAAT,SAAS,CAAW;QACpB,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAgB;QALjC,IAAA,CAAA,MAAM,GAA8C,EAAE,CAAC;QAOrD,qEAAqE;QACrE,IAAI,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAGhC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,OAAO,CAAC,UAAA,SAAS;YAClC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBACf,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC5D,SAAS,EAAE,CAAC,kBAAkB,CAAC,OAAO,CAAC,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAC3E,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,kBAAA,CAAA,SAAA,CAAA,UAAU,GAAlB,UAAmB,CAAU;QAC3B,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC,CAAA;IAED,kBAAA,CAAA,SAAA,CAAA,YAAY,GAAZ;QACE,yCAAyC;QACzC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;YACvB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC,CAAA;IAED,kBAAA,CAAA,SAAA,CAAA,YAAY,GAAZ;QACE,kDAAkD;QAClD,IAAI,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,MAAA,CAAA,CAAC,CAAC,CAAC,SAAS,CAAA,CAAZ,CAAY,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,MAAA,CAAA,CAAC,CAAC,IAAI,CAAA,CAAN,CAAM,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;IAC5C,CAAC,CAAA;IAED,kBAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,IAAU;QAChB,8CAA8C;QAC9C,0CAA0C;QAC1C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAA;IACH,MAAA,CAAA,kBAAC,CAAA;GA3CD,CAAA,CA2CC;ACKD,OAAO,EDhDM,kBAAkB,EAAA,CAAA;ACiD/B,2CAA2C","file":"/home/arvind/coding/entr/hybrid/gotnext/src/pages/schedule-filter/schedule-filter.ts.post-build-optimizer.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\n\nimport { NavParams, ViewController } from 'ionic-angular';\n\nimport { FirebaseDatabase } from '../../providers/firebase/firebase';\n\n\n@Component({\n  selector: 'page-schedule-filter',\n  templateUrl: 'schedule-filter.html'\n})\nexport class ScheduleFilterPage {\n  states: Array<{name: string, isChecked: boolean}> = [];\n\n  constructor(\n    public fbd: FirebaseDatabase,\n    public navParams: NavParams,\n    public viewCtrl: ViewController\n  ) {\n    // passed in array of track names that should be excluded (unchecked)\n    let excludedTrackNames = this.navParams.data;\n    console.log(excludedTrackNames);\n    \n\n    this.fbd.getStates().forEach(stateName => {\n        this.states.push({\n          name: stateName.charAt(0).toUpperCase() + stateName.slice(1),\n          isChecked: (excludedTrackNames.indexOf(this.capitalize(stateName)) === -1)\n        });\n    });\n  }\n\n  private capitalize(s : string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  resetFilters() {\n    // reset all of the toggles to be checked\n    this.states.forEach(track => {\n      track.isChecked = true;\n    });\n  }\n\n  applyFilters() {\n    // Pass back a new array of track names to exclude\n    let excludedTrackNames = this.states.filter(c => !c.isChecked).map(c => c.name);\n    this.viewCtrl.dismiss(excludedTrackNames);\n  }\n\n  dismiss(data?: any) {\n    // using the injected ViewController this page\n    // can \"dismiss\" itself and pass back data\n    this.viewCtrl.dismiss(data);\n  }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component } from '@angular/core';\nimport { NavParams, ViewController } from 'ionic-angular';\nimport { FirebaseDatabase } from '../../providers/firebase/firebase';\nvar ScheduleFilterPage = (function () {\n    function ScheduleFilterPage(fbd, navParams, viewCtrl) {\n        var _this = this;\n        this.fbd = fbd;\n        this.navParams = navParams;\n        this.viewCtrl = viewCtrl;\n        this.states = [];\n        // passed in array of track names that should be excluded (unchecked)\n        var excludedTrackNames = this.navParams.data;\n        console.log(excludedTrackNames);\n        this.fbd.getStates().forEach(function (stateName) {\n            _this.states.push({\n                name: stateName.charAt(0).toUpperCase() + stateName.slice(1),\n                isChecked: (excludedTrackNames.indexOf(_this.capitalize(stateName)) === -1)\n            });\n        });\n    }\n    ScheduleFilterPage.prototype.capitalize = function (s) {\n        return s.charAt(0).toUpperCase() + s.slice(1);\n    };\n    ScheduleFilterPage.prototype.resetFilters = function () {\n        // reset all of the toggles to be checked\n        this.states.forEach(function (track) {\n            track.isChecked = true;\n        });\n    };\n    ScheduleFilterPage.prototype.applyFilters = function () {\n        // Pass back a new array of track names to exclude\n        var excludedTrackNames = this.states.filter(function (c) { return !c.isChecked; }).map(function (c) { return c.name; });\n        this.viewCtrl.dismiss(excludedTrackNames);\n    };\n    ScheduleFilterPage.prototype.dismiss = function (data) {\n        // using the injected ViewController this page\n        // can \"dismiss\" itself and pass back data\n        this.viewCtrl.dismiss(data);\n    };\n    ScheduleFilterPage = __decorate([\n        Component({\n            selector: 'page-schedule-filter',\n            templateUrl: 'schedule-filter.html'\n        }),\n        __metadata(\"design:paramtypes\", [FirebaseDatabase,\n            NavParams,\n            ViewController])\n    ], ScheduleFilterPage);\n    return ScheduleFilterPage;\n}());\nexport { ScheduleFilterPage };\n//# sourceMappingURL=schedule-filter.js.map"]}